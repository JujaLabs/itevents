group 'org.itevents'
version '1.0-SNAPSHOT'

apply plugin: 'war'
apply plugin: 'jetty'

war {
    archiveName = 'ROOT.war'
    destinationDir = file('../webapps')
}

configurations {
    liquibase.extendsFrom configurations.liquibaseCommon
    compile.extendsFrom configurations.springFramework
    compile.extendsFrom configurations.springSecurity
    compile.extendsFrom configurations.javaxInject
    compile.extendsFrom configurations.javaxServlet
    compile.extendsFrom configurations.dao
    compile.extendsFrom configurations.log4j
    compile.extendsFrom configurations.swagger
    compile.extendsFrom configurations.mailing
    compile.extendsFrom configurations.geocoder
    compile.extendsFrom configurations.validating
    testCompile.extendsFrom configurations.testing
}

test {
    testLogging {
        events "skipped", "failed"
        exceptionFormat "full"
    }
}

Properties properties = new Properties()


def defaultPropertiesFile = new File(projectDir.toString().replace('\\', '/') + "/src/main/resources/global.properties")
def localPropertiesFile = new File(projectDir.toString().replace('\\', '/') + "/src/main/resources/local.properties")

properties.load(new FileInputStream(defaultPropertiesFile))
if (localPropertiesFile.exists()) {
    properties.load(new FileInputStream(localPropertiesFile));
    httpPort = Integer.valueOf(properties.getProperty('http.port'));
    stopPort = Integer.valueOf(properties.getProperty('stop.port'));
    stopKey = properties.getProperty('stop.key');
} else {
    String errorMessage = 'local.properties is absent!'
    logger.error(errorMessage)
    throw new InvalidUserDataException(errorMessage)
}



test.dependsOn "liquibaseTestUpdate"

task liquibaseUpdate(type: JavaExec) {
    description 'Liquibase updates DB by all not used changesets'
    group = 'Liquibase'
    classpath configurations.liquibase
    main = 'liquibase.integration.commandline.Main'
    if (
    project.hasProperty("username") &&
            project.hasProperty("password") &&
            project.hasProperty("url")
    ){
        Map<String,?> propertyMap = project.getProperties()
        args "--username=${propertyMap['username']}"
        args "--password=${propertyMap['password']}"
        args "--url=${propertyMap['url']}"
    } else {
        args "--username=${properties.getProperty('database.username')}"
        args "--password=${properties.getProperty('database.password')}"
        args "--url=${properties.getProperty('database.url')}"
    }
    args "--changeLogFile=${properties.getProperty('changelog.file')}"
    args 'update'
}

task liquibaseRollback(type: JavaExec) {
    description 'Liquibase rollbacks DB by specified number of changesets'
    group = "Liquibase"
    classpath configurations.liquibase
    main = 'liquibase.integration.commandline.Main'
    args "--username=${properties.getProperty('database.username')}"
    args "--password=${properties.getProperty('database.password')}"
    args "--url=${properties.getProperty('database.url')}"
    args "--changeLogFile=${properties.getProperty('changelog.file')}"
    args 'rollbackCount'
    args '0'
}

task liquibaseTestUpdate(type: JavaExec) {
    def testPropertiesFile = new File(projectDir.toString().replace('\\', '/') + "/src/test/resources/test-local.properties")
    if (!testPropertiesFile.exists()) {
        String errorMessage = 'test-local.properties is absent!'
        logger.error(errorMessage)
        throw new InvalidUserDataException(errorMessage)
    }
    Properties testProperties = new Properties()
    testProperties.load(new FileInputStream(testPropertiesFile))
    description 'Liquibase updates Test DB by all not used changesets'
    group = 'Liquibase'
    classpath configurations.liquibase
    main = 'liquibase.integration.commandline.Main'
    args "--username=${testProperties.getProperty('database.username')}"
    args "--password=${testProperties.getProperty('database.password')}"
    args "--url=${testProperties.getProperty('database.url')}"
    args "--changeLogFile=${testProperties.getProperty('changelog.file')}"
    args 'update'
}